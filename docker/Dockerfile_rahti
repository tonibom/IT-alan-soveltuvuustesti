# Build environment (for setting up React)
FROM node:19-bullseye as build
WORKDIR /app
ENV PATH /app/node_modules/.bin:$PATH
COPY ../package.json ./
COPY ../package-lock.json ./
RUN npm install -g npm@9.4.1 --silent
RUN npm install --silent
RUN npm ci
RUN npm install react-scripts@3.4.1 -g --silent
COPY . ./
RUN npm run build



# Production environment (to run the server)
FROM alpine:3.17.2

# Create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup app && adduser -S -G app app -h /home/app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME $APP_HOME/api
WORKDIR $APP_HOME

# Install Python3 and psql client
RUN apk add --update --no-cache python3 postgresql-client

## Setup python & pip
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

#COPY --from=build /usr/src/app/wheels /wheels
RUN ln -sf python3 /usr/bin/python \
    && python3 -m ensurepip \
    && pip3 install --upgrade pip

COPY api/api.py api/api.py
COPY api/requirements.txt api/requirements.txt
COPY api/entrypoint.sh api/entrypoint.sh

# Install PyPi packages
RUN pip3 install -r ./api/requirements.txt

# Copy the built application
COPY --from=build /app/build ./build
RUN chown -R app:app $APP_HOME

# Not sure why this needs to be specified twice. For some reason it does
# not work the first time. Problems with Docker COPY.
COPY api/api.py api/api.py
USER app

ENTRYPOINT ["/home/app/web/api/entrypoint.sh"]

